// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`New Host render New Host correctly 1`] = `
<Fragment>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "unit": "px",
          "up": [Function],
          "values": Object {
            "lg": 1200,
            "md": 900,
            "sm": 600,
            "xl": 1536,
            "xs": 0,
          },
        },
        "components": Object {},
        "direction": "ltr",
        "mixins": Object {
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#fff",
            "paper": "#fff",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "rgb(178, 16, 47)",
            "light": "rgb(255, 69, 105)",
            "main": "#ff1744",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#f5f5f5",
            "A200": "#eeeeee",
            "A400": "#bdbdbd",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#01579b",
            "light": "#03a9f4",
            "main": "#0288d1",
          },
          "mode": "light",
          "primary": Object {
            "contrastText": "#fff",
            "dark": "rgb(163, 21, 69)",
            "light": "rgb(237, 75, 130)",
            "main": "#e91e63",
          },
          "secondary": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "rgb(53, 122, 56)",
            "light": "rgb(111, 191, 115)",
            "main": "#4caf50",
          },
          "success": Object {
            "contrastText": "#fff",
            "dark": "#1b5e20",
            "light": "#4caf50",
            "main": "#2e7d32",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.6)",
          },
          "tonalOffset": 0.2,
          "warning": Object {
            "contrastText": "#fff",
            "dark": "#e65100",
            "light": "#ff9800",
            "main": "#ed6c02",
          },
        },
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
      }
    }
  >
    <CssBaseline />
    <Header />
    <ForwardRef(Container)
      component="main"
      maxWidth="sm"
      sx={
        Object {
          "mb": 4,
        }
      }
    >
      <ForwardRef(Paper)
        sx={
          Object {
            "my": Object {
              "md": 6,
              "xs": 3,
            },
            "p": Object {
              "md": 3,
              "xs": 2,
            },
          }
        }
        variant="outlined"
      >
        <ForwardRef(Typography)
          gutterBottom={true}
          variant="h6"
        >
          Add new Host
        </ForwardRef(Typography)>
        <ForwardRef(Box)
          component="form"
          onSubmit={[Function]}
          variant="h5"
        >
          <ForwardRef(FormGroup)>
            <ForwardRef(FormControlLabel)
              control={
                <ForwardRef(Checkbox)
                  checked={false}
                  inputProps={
                    Object {
                      "aria-label": "controlled",
                    }
                  }
                  onChange={[Function]}
                />
              }
              label="upload your own json file"
            />
          </ForwardRef(FormGroup)>
          <ForwardRef(Grid)
            container={true}
            spacing={3}
          >
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              <ForwardRef(TextField)
                autoComplete="Title"
                fullWidth={true}
                id="title"
                label="Host title"
                margin="normal"
                name="title"
                required={true}
                variant="standard"
              />
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              <ForwardRef(TextField)
                autoComplete="Address"
                fullWidth={true}
                id="address"
                label="Host address"
                margin="normal"
                name="address"
                required={true}
                variant="standard"
              />
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              <ForwardRef(TextField)
                autoComplete="Price"
                fullWidth={true}
                id="price"
                label="Host price"
                margin="normal"
                min={1}
                name="price"
                required={true}
                variant="standard"
              />
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              <ForwardRef(TextField)
                autoComplete="Property Type"
                fullWidth={true}
                id="propertyType"
                label="propertyType"
                margin="normal"
                name="propertyType"
                required={true}
                variant="standard"
              />
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              <ForwardRef(TextField)
                autoComplete="Amenities"
                fullWidth={true}
                id="amenities"
                label="amenities"
                margin="normal"
                name="amenities"
                required={true}
                variant="standard"
              />
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              Bathrooms: 
              <ForwardRef
                defaultValue={1}
                id="bathrooms"
                min={0}
                name="bathrooms"
                required={true}
              />
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              Bedrooms:
               
              <ForwardRef
                id="bedrooms"
                min={1}
                name="bedrooms"
                onBlur={[Function]}
                onStep={[Function]}
                required={true}
                value={1}
              />
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              <ForwardRef(Box)
                sx={
                  Object {
                    "border": "1px dashed grey",
                  }
                }
              >
                <ForwardRef(Grid)
                  item={true}
                  key="0"
                  xs={12}
                >
                  Beds: 
                  <ForwardRef
                    defaultValue={1}
                    id="beds0"
                    min={1}
                    name="beds0"
                  />
                  Types: 
                  <Input
                    id="types0"
                    name="types0"
                    placeholder="type"
                    type="text"
                  />
                  <ForwardRef(Button)
                    onClick={[Function]}
                    variant="contained"
                  >
                    Remove
                  </ForwardRef(Button)>
                </ForwardRef(Grid)>
              </ForwardRef(Box)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              <ForwardRef(Card)>
                <ForwardRef(CardHeader)
                  title="thumbnail"
                />
                <ForwardRef(CardMedia)
                  component="img"
                  image={null}
                />
              </ForwardRef(Card)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              <ForwardRef(TextField)
                autoComplete="Thumbnail"
                fullWidth={true}
                id="thumbnail"
                margin="normal"
                name="thumbnail"
                onChange={[Function]}
                type="file"
                variant="standard"
              />
              <ForwardRef(TextField)
                autoComplete="Video"
                fullWidth={true}
                id="video"
                label="video"
                margin="normal"
                name="video"
                variant="standard"
              />
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={12}
            >
              <ForwardRef(TextField)
                autoComplete="Thumbnail"
                fullWidth={true}
                id="images"
                inputProps={
                  Object {
                    "multiple": true,
                  }
                }
                margin="normal"
                name="images"
                onChange={[Function]}
                type="file"
                variant="standard"
              />
            </ForwardRef(Grid)>
          </ForwardRef(Grid)>
          <ForwardRef(Box)
            sx={
              Object {
                "display": "flex",
                "justifyContent": "flex-end",
              }
            }
          >
            <ForwardRef(Button)
              onClick={[Function]}
              sx={
                Object {
                  "ml": 1,
                  "mt": 3,
                }
              }
              variant="contained"
            >
              Cancel
            </ForwardRef(Button)>
            <ForwardRef(Button)
              sx={
                Object {
                  "ml": 1,
                  "mt": 3,
                }
              }
              type="submit"
              variant="contained"
            >
              Add
            </ForwardRef(Button)>
          </ForwardRef(Box)>
        </ForwardRef(Box)>
      </ForwardRef(Paper)>
    </ForwardRef(Container)>
  </ThemeProvider>
</Fragment>
`;
